#define VOXELCENTEROFFSET 0.5

void voxeltexture_vp(
	float4 inPosition			: POSITION,

	out float4 outPosition  	: POSITION,
	out float4 outWorldPosition	: TEXCOORD0,

	uniform float4x4 world,
	uniform float4x4 viewProj)
{
	outWorldPosition = mul(world, inPosition);
	
	outPosition = mul(viewProj, outWorldPosition);
}

void voxeltexture_fp(
	float4 inWorldPosition    	: TEXCOORD0,

	out float4 color			: COLOR,

	uniform sampler2D texture)
{
	float3 worldNormal = cross(ddy(inWorldPosition.xyz), ddx(inWorldPosition.xyz));
	worldNormal = normalize(worldNormal);
	//Right
    if(worldNormal.x > 0.5)
    {
        color = tex2D(texture, float2((1 - inWorldPosition.z) + VOXELCENTEROFFSET, (1 - inWorldPosition.y) + VOXELCENTEROFFSET));
    }
	//Left
	if(worldNormal.x < -0.5)
    {
        color = tex2D(texture, float2(inWorldPosition.z + VOXELCENTEROFFSET, (1 - inWorldPosition.y) + VOXELCENTEROFFSET));
    }
	//Top
    if(worldNormal.y > 0.5)
    {
        color = tex2D(texture, inWorldPosition.xz + VOXELCENTEROFFSET);
    }
	//Bottom
    if(worldNormal.y < -0.5)
    {
        color = tex2D(texture, float2(inWorldPosition.x + VOXELCENTEROFFSET, (1 - inWorldPosition.z) + VOXELCENTEROFFSET));
    }
	//Front
    if(worldNormal.z > 0.5)
    {
        color = tex2D(texture, float2(inWorldPosition.x + VOXELCENTEROFFSET, (1 - inWorldPosition.y) + VOXELCENTEROFFSET));
    }
	//Back
    if(worldNormal.z < -0.5)
    {
        color = tex2D(texture, float2((1 - inWorldPosition.x) + VOXELCENTEROFFSET, (1 - inWorldPosition.y) + VOXELCENTEROFFSET));
    }
}